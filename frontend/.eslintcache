[{"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\App.js":"3","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseProcedure\\DatabaseProcedure.js":"4","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseFunction\\DatabaseFunction.js":"5","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseManipulation\\DatabaseManipulation.js":"6","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseTrigger\\DatabaseTrigger.js":"7","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\hoc\\Layout\\Layout.js":"8","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\axios.js":"9","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\components\\DatabaseTable\\DatabaseTable.js":"10","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"11","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\utils\\formatType.js":"12","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"13","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseManage\\DatabaseManage.js":"14","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseManage\\AddRecordForm\\AddRecordForm.js":"15","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\hoc\\withErrorHandler\\withErrorHandler.js":"16","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\utils\\formater.js":"17"},{"size":611,"mtime":1608782459802,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1261,"mtime":1609123490052,"results":"21","hashOfConfig":"19"},{"size":169,"mtime":1608786391072,"results":"22","hashOfConfig":"19"},{"size":167,"mtime":1608786385009,"results":"23","hashOfConfig":"19"},{"size":158,"mtime":1608782891267,"results":"24","hashOfConfig":"19"},{"size":165,"mtime":1608786397176,"results":"25","hashOfConfig":"19"},{"size":666,"mtime":1609123378364,"results":"26","hashOfConfig":"19"},{"size":134,"mtime":1608798211444,"results":"27","hashOfConfig":"19"},{"size":620,"mtime":1608891487471,"results":"28","hashOfConfig":"19"},{"size":302,"mtime":1609123498865,"results":"29","hashOfConfig":"19"},{"size":457,"mtime":1609122624055,"results":"30","hashOfConfig":"19"},{"size":448,"mtime":1609123587249,"results":"31","hashOfConfig":"19"},{"size":3562,"mtime":1609122496062,"results":"32","hashOfConfig":"19"},{"size":1551,"mtime":1609121207368,"results":"33","hashOfConfig":"19"},{"size":1416,"mtime":1609120941115,"results":"34","hashOfConfig":"19"},{"size":409,"mtime":1609122121527,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ermkjc",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\index.js",[],["74","75"],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\App.js",["76","77"],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseProcedure\\DatabaseProcedure.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseFunction\\DatabaseFunction.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseManipulation\\DatabaseManipulation.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseTrigger\\DatabaseTrigger.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\hoc\\Layout\\Layout.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\axios.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\components\\DatabaseTable\\DatabaseTable.js",["78","79"],"import React from \"react\";\r\nimport { Table, Space } from \"antd\";\r\nconst { Column } = Table;\r\n\r\nexport default function DatabaseTable({ tableContent }) {\r\n  const action = (\r\n    <Column\r\n      title=\"\"\r\n      key=\"action\"\r\n      render={(text, record) => (\r\n        <Space size=\"middle\">\r\n          <a>Update</a>\r\n          <a>Delete</a>\r\n        </Space>\r\n      )}\r\n    />\r\n  );\r\n  return (\r\n    <Table key=\"home_table\" dataSource={tableContent.dataSource}>\r\n      {tableContent.columns.map((column) => (\r\n        <Column {...column} />\r\n      ))}\r\n      {tableContent.columns.length && action}\r\n    </Table>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\utils\\formatType.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseManage\\DatabaseManage.js",["80"],"import { Menu, Button, Row, Space, Modal } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport DatabaseTable from \"../../components/DatabaseTable/DatabaseTable\";\r\nimport AddRecordForm from \"./AddRecordForm/AddRecordForm\";\r\nimport { formatMetadata } from \"../../utils/formater\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nclass DatabaseManage extends Component {\r\n  state = {\r\n    allowedTables: [\r\n      \"Car\",\r\n      \"Cartype\",\r\n      \"Customer\",\r\n      \"Delitype\",\r\n      \"Delivering\",\r\n      \"Empcode\",\r\n      \"Employee\",\r\n      \"Package\",\r\n      \"Report\",\r\n      \"ReportCode\",\r\n      \"Request\",\r\n      \"Storage\",\r\n    ],\r\n    tableContent: {\r\n      dataSource: [],\r\n      metaData: [],\r\n    },\r\n    showAddRowForm: false,\r\n    tableName: \"\",\r\n  };\r\n\r\n  addRowHandler = () => {\r\n    this.setState({ showAddRowForm: true });\r\n  };\r\n\r\n  confirmAddRowHandler = async () => {\r\n    this.setState({ showAddRowForm: false });\r\n    await this.displayTableHandler(this.state.tableName);\r\n  };\r\n  cancelAddRowHandler = () => {\r\n    this.setState({ showAddRowForm: false });\r\n  };\r\n\r\n  displayTableHandler = async (tableName) => {\r\n    let dataSource = [];\r\n    let metaData = [];\r\n    try {\r\n      const res = await axios.post(\"/get-table-content\", { tableName });\r\n      metaData = formatMetadata(res.data.metaData);\r\n      const rows = res.data.rows;\r\n      dataSource = rows.map((el, i) => ({\r\n        key: i,\r\n        ...el,\r\n      }));\r\n\r\n      this.setState({\r\n        tableContent: {\r\n          metaData,\r\n          dataSource,\r\n        },\r\n        tableName,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        tableContent: {\r\n          metaData,\r\n          dataSource,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const modal = (\r\n      <Modal\r\n        title=\"Create a Row\"\r\n        visible={this.state.showAddRowForm}\r\n        onOk={this.confirmAddRowHandler}\r\n        onCancel={this.cancelAddRowHandler}\r\n      >\r\n        <AddRecordForm\r\n          tableContent={this.state.tableContent}\r\n          tableName={this.state.tableName}\r\n        />\r\n      </Modal>\r\n    );\r\n    const tableButtons = (\r\n      <Row justify={\"center\"} key=\"home_row\">\r\n        {modal}\r\n        <Menu mode=\"horizontal\" key=\"home_menu\">\r\n          <Space key=\"home_space\">\r\n            {this.state.allowedTables.map((tableButton, i) => (\r\n              <Button\r\n                onClick={(e) => this.displayTableHandler(tableButton)}\r\n                key={\"home_button_\" + i}\r\n              >\r\n                {tableButton}\r\n              </Button>\r\n            ))}\r\n          </Space>\r\n        </Menu>\r\n      </Row>\r\n    );\r\n\r\n    const addRowButton =\r\n      this.state.tableName != \"\" ? (\r\n        <Button\r\n          onClick={this.addRowHandler}\r\n          type=\"primary\"\r\n          style={{\r\n            marginBottom: 16,\r\n            marginTop: 16,\r\n            float: \"left\",\r\n          }}\r\n        >\r\n          Add a row\r\n        </Button>\r\n      ) : null;\r\n\r\n    return (\r\n      <div className=\"DatabaseManage\" key=\"DatabaseManage\">\r\n        {tableButtons}\r\n        {addRowButton}\r\n        <DatabaseTable\r\n          tableContent={{\r\n            ...this.state.tableContent,\r\n            columns: this.state.tableContent.metaData.map((el) => ({\r\n              title: el.name,\r\n              dataIndex: el.name,\r\n              key: el.name,\r\n            })),\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withErrorHandler(DatabaseManage, axios);\r\n","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\containers\\DatabaseManage\\AddRecordForm\\AddRecordForm.js",["81"],"import React from \"react\";\r\nimport axios from \"../../../axios\";\r\nimport { Form, Input, Button, InputNumber } from \"antd\";\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default class AddRecordForm extends React.Component {\r\n  formRef = React.createRef();\r\n\r\n  onFinish = async (values) => {\r\n    try {\r\n      await axios.post(\"/insert-record\", {\r\n        data: values,\r\n        tableName: this.props.tableName,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  render() {\r\n    return (\r\n      <Form\r\n        {...layout}\r\n        ref={this.formRef}\r\n        name=\"control-ref\"\r\n        onFinish={this.onFinish}\r\n        onValuesChange={this.onValuesChange}\r\n      >\r\n        {this.props.tableContent.metaData.map((meta) => (\r\n          <Form.Item\r\n            label={meta.name}\r\n            name={meta.name}\r\n            rules={[{ type: meta.type }]}\r\n          >\r\n            {meta.type == \"number\" ? (\r\n              <InputNumber type={meta.type} />\r\n            ) : (\r\n              <Input type={meta.type} />\r\n            )}\r\n          </Form.Item>\r\n        ))}\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button htmlType=\"button\" onClick={this.onReset}>\r\n            Reset\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\hoc\\withErrorHandler\\withErrorHandler.js",[],"C:\\Users\\ASUS\\Desktop\\201\\DBS\\assignment\\assignment2\\transportation-service\\front-end\\src\\utils\\formater.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":28},{"ruleId":"86","severity":1,"message":"90","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":12,"column":11,"nodeType":"93","endLine":12,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":13,"column":11,"nodeType":"93","endLine":13,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":106,"column":28,"nodeType":"96","messageId":"97","endLine":106,"endColumn":30},{"ruleId":"94","severity":1,"message":"98","line":48,"column":24,"nodeType":"96","messageId":"97","endLine":48,"endColumn":26},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'DatabaseManipulation' is defined but never used.","Identifier","unusedVar","'DatabaseTrigger' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]